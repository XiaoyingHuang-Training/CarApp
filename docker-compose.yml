version: '3.8'

services:
  # MySQL Database Service
  mysqldb:
    container_name: mysql-container
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: cardb_jwt
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3308:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - spring-mysql-net

  # Backend Spring Boot Service
  spring-app:
    build:
      context: ./lbg-car-spring-app-starter  # Adjusted to point to backend directory
      dockerfile: Dockerfile
    container_name: spring-app
    depends_on:
      mysqldb:
        condition: service_healthy
    ports:
      - "8000:8000"  # Exposes Spring Boot app on port 8000
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysqldb:3306/cardb_jwt?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.MySQL5InnoDBDialect
      SPRING_JPA_GENERATE_DDL: "true"
      SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop
      SPRING_DATA_REST_BASEPATH: /api
    networks:
      - spring-mysql-net

  # Frontend React + Nginx Service
  frontend-app:
    build:
      context: ./lbg-car-react-starter  # Corrected to point to the frontend directory
      dockerfile: Dockerfile  # Ensure this Dockerfile is in the frontend directory
    container_name: frontend-app
    ports:
      - "8080:80"  # Exposes React app on port 8080
    networks:
      - spring-mysql-net

networks:
  spring-mysql-net:
    driver: bridge

volumes:
  mysql_data:
